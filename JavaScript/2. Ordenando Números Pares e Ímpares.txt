// 2. Ordenando Números Pares e Ímpares

/* Crie um programa onde você receberá valores inteiros não negativos como
entrada.
Ordene estes valores de acordo com o seguinte critério:
- Primeiro os Pares
- Depois os Ímpares
- Você deve exibir os pares em ordem crescente e na sequência os ímpares em
ordem decrescente.
- Entrada
A primeira linha de entrada contém um único inteiro positivo N (1 < N < 10000)
Este é o número de linhas de entrada que vem logo a seguir. As próximas N
linhas terão, cada uma delas, um valor inteiro não negativo.
- Saída
Exiba todos os valores lidos na entrada segundo a ordem apresentada acima. Cada
número deve ser impresso em uma linha, conforme exemplo de saída abaixo.
*/

--------------------------------
Entradas                    Saída
//10                        4
//4                         32
//32                        34
//34                        98  
//543                       654
//3456                      3456
//654                       6789
//567                       567
//87                        543
//6789                      87
//98 
--------------------------------

/*
const linhas = parseInt(gets());
let entrada = [];

for (let i = 0; i < linhas; i++) {
  entrada = [...entrada, gets()];
}

entrada = entrada.sort((a, b) => a - b);
const pares = entrada
  .filter(n => n % 2 === 0);
const impares = entrada
  .filter(n => n % 2 === 1)
  .reverse();
const saida = [...pares, ...impares];
saida.map((n) => console.log(n));
*/

let N = parseInt(gets())

let pares = []
let impares = []
for (let i = 0; i < N; i++) {
    let num = parseInt(gets())

    num % 2 === 0 ? pares.push(num) : impares.push(num)
}

// sort ordena arrays
pares.sort((a,b) => a - b )
impares.sort((a,b) => b -a )

// of:Exibir cada elemento dentro de um array 
// Spread operation = Operador de espalhamento -->  vai remover o conteudo e espalhar os valores
// dentro de uma outra estrutura que vai estar trabalhando.
for(e of[...pares, ...impares]){
    console.log(e)
}
